{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentrankhanhnguyen/Desktop/web/WebCodeC/src/components/Profile.js\";\nimport React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"../css/Profile.css\";\nimport { Menu } from \"antd\";\nimport AppHeader from \"./AppHeader\";\nimport { MyInput } from \"./MyInput\";\nimport { firebaseApp } from \"../components/Firebase\";\nimport { ButtonToggle } from \"reactstrap\";\nimport { Formik, Form } from \"formik\";\nimport Swal from \"sweetalert2\";\nimport * as yup from \"yup\";\n\nconst Profile = props => {\n  const handleClick = e => {\n    console.log('click ', e);\n  };\n\n  const validationSchema = yup.object({\n    fullName: yup.string().required(\"Vui lòng nhập đầy đủ họ tên\").matches(/^([^0-9]*)$/, \"Tên chỉ bao gồm ký tự từ a-z\").max(30, \"Tên quá dài\").min(5, \"Tên quá ngắn\"),\n    birthday: yup.string().required(\"Vui lòng nhập ngày sinh\"),\n    email: yup.string().email('Email không hợp lệ').required(\"Vui lòng nhập email\"),\n    studentID: yup.string().required('Vui lòng nhập mã số sinh viên').matches(/^([^a-z]*)$/, \"Mã số sinh viên chỉ gồm 7 số từ 0-9\").max(7, \"Mã số sinh viên bao gồm 7 số\").min(7, \"Mã số sinh viên bao gồm 7 số\"),\n    phoneNumber: yup.string().required('Vui lòng nhập mã số điện thoại').matches(/^([^a-z]*)$/, \"Số điện thoại chỉ gồm 10 số từ 0-9\").max(10, \"Số điện thoại bao gồm 10 số\").min(10, \"Số điện thoại bao gồm 10 số\")\n  });\n  const validationPassword = yup.object({\n    password: yup.string().min(6, \"Mật khẩu quá ngắn\").required('Vui lòng nhập mật khẩu'),\n    password2: yup.string().oneOf([yup.ref('password')], 'Mật khẩu không giống mật khẩu đã nhập').required('Vui lòng nhập lại mật khẩu')\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(AppHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mainProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"leftProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    onClick: handleClick,\n    style: {\n      width: 256\n    },\n    defaultSelectedKeys: [\"1\"],\n    defaultOpenKeys: [\"sub1\"],\n    mode: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    key: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Th\\xF4ng tin c\\u01A1 b\\u1EA3n\"), React.createElement(Menu.Item, {\n    key: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u0110\\u1ED5i m\\u1EADt kh\\u1EA9u\"))), React.createElement(\"div\", {\n    id: \"rightProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })));\n};\n\nexport default Profile; // handleClick = e => {\n//   console.log('click ', e);\n//   if (e.key === '1') {\n//     this.setState ({\n//       userShow: true,\n//       changePassword: false\n//     })\n//   }\n//   else if (e.key === '2') {\n//     this.setState ({\n//       userShow: false,\n//       changePassword: true\n//     })\n//   }\n// };\n// validationSchema = yup.object({\n//   fullName:yup.string()\n//   .required(\"Vui lòng nhập đầy đủ họ tên\")\n//   .matches(/^([^0-9]*)$/,\"Tên chỉ bao gồm ký tự từ a-z\")\n//   .max(30,\"Tên quá dài\")\n//   .min(5,\"Tên quá ngắn\"),\n//   birthday:yup.string()\n//   .required(\"Vui lòng nhập ngày sinh\"),\n//   email:yup.string()\n//   .email('Email không hợp lệ')\n//   .required(\"Vui lòng nhập email\"),\n//   studentID:yup.string()\n//   .required('Vui lòng nhập mã số sinh viên')\n//   .matches(/^([^a-z]*)$/,\"Mã số sinh viên chỉ gồm 7 số từ 0-9\")\n//   .max(7,\"Mã số sinh viên bao gồm 7 số\")\n//   .min(7,\"Mã số sinh viên bao gồm 7 số\"),\n//   phoneNumber:yup.string()\n//   .required('Vui lòng nhập mã số điện thoại')\n//   .matches(/^([^a-z]*)$/,\"Số điện thoại chỉ gồm 10 số từ 0-9\")\n//   .max(10,\"Số điện thoại bao gồm 10 số\")\n//   .min(10,\"Số điện thoại bao gồm 10 số\")\n// })\n// validationPassword = yup.object({\n//   password:yup.string()\n//   .min(6,\"Mật khẩu quá ngắn\")\n//   .required('Vui lòng nhập mật khẩu'),\n//   password2:yup.string()\n//   .oneOf([yup.ref('password')], 'Mật khẩu không giống mật khẩu đã nhập')\n//   .required('Vui lòng nhập lại mật khẩu'),\n// })\n// enableForm = () => {\n//   document.getElementById(\"fullName\").disabled = false;\n//   document.getElementById(\"birthday\").disabled = false;\n//   document.getElementById(\"studentID\").disabled = false;\n//   document.getElementById(\"phoneNumber\").disabled = false;\n//   document.getElementById(\"changeInform\").hidden = true;\n//   document.getElementById(\"accept\").hidden = false;\n// }\n//   setData = () =>{\n//     firebaseApp.database().ref('userInform/' + localStorage.getItem('login')).child('fullName').on('value', function(snapshot) {\n//     })\n//   }\n//   handleSuccess = (values) => {\n//     document.getElementById(\"fullName\").disabled = true;\n//     document.getElementById(\"birthday\").disabled = true;\n//     document.getElementById(\"studentID\").disabled = true;\n//     document.getElementById(\"phoneNumber\").disabled = true;\n//     document.getElementById(\"changeInform\").hidden = false;\n//     document.getElementById(\"accept\").hidden = true;\n//     console.log(localStorage.getItem('login'))\n//     firebaseApp.database().ref('userInform/' + localStorage.getItem('login')).set ({\n//       fullName : values.fullName,\n//       birthday: values.birthday,\n//       email: values.email,\n//       studentID: values.studentID,\n//       phoneNumber: values.phoneNumber,\n//       password : this.state.password\n//     })\n//   }\n//   handelChangePassword = (values) => {\n//     var user = firebaseApp.auth().currentUser;\n//     user.updatePassword(values.password).then(function() {\n//       Swal.fire(\n//         'Chúc mừng!',\n//         'Bạn đã thay đổi mật khẩu thành công!',\n//         'success'\n//       )\n//     }).catch(function(error) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Thất bại',\n//         text: 'Không thay đổi được mật khẩu!',\n//     })\n//     });\n//   }\n//   componentDidMount () {\n//     this.setData();\n//   }\n//   render() {\n//     let rightProfile;\n//     if (this.state.userShow) {\n//         rightProfile = [\n//           <Formik\n//             const initialValues = {\n//                 {\n//                     fullName: this.state.fullName,\n//                     birthday: this.state.birthday,\n//                     email: this.state.email,\n//                     studentID: this.state.studentID,\n//                     phoneNumber: this.state.phoneNumber,\n//                 }\n//             }\n//             validationSchema = { this.validationSchema }\n//             onSubmit = {values => this.handleSuccess(values)}>\n//             {({ handelSubmit }) =>\n//               <div>\n//                 <Form className = \"formikProfile\">\n//                   <p>Họ và Tên:</p>\n//                   <MyInput id=\"fullName\" type = \"text\" name= \"fullName\" variant=\"outlined\" disabled/>\n//                   <p>Ngày sinh:</p>\n//                   <MyInput id=\"birthday\" type = \"date\" name= \"birthday\" variant=\"outlined\" disabled/>\n//                   <p>Email:(Không thể thay đổi)</p>\n//                   <MyInput id=\"email\" type = \"email\" name= \"email\" variant=\"outlined\" />\n//                   <p>Mã số sinh viên:</p>\n//                   <MyInput id=\"studentID\" type = \"text\" name= \"studentID\" variant=\"outlined\" disabled/>\n//                   <p>Số điện thoại:</p>\n//                   <MyInput id=\"phoneNumber\" type = \"text\" name= \"phoneNumber\" variant=\"outlined\" disabled/>\n//                   <ButtonToggle id=\"accept\" color=\"primary\" onClick={handelSubmit} hidden>Xác nhận</ButtonToggle>\n//                   <ButtonToggle id=\"changeInform\" color=\"primary\" onClick={this.enableForm} >Thay đổi thông tin</ButtonToggle>\n//                 </Form>\n//               </div>\n//             }\n//           </Formik>\n//         ]\n//     }\n//     else if (this.state.changePassword) {\n//       rightProfile = [\n//         <Formik\n//           const newPassword = {\n//               {\n//                   password: '',\n//                   password2: '',\n//               }\n//           }\n//           validationSchema = { this.validationPassword }\n//           onSubmit = {values => this.handelChangePassword(values)}>\n//           {({ handelSubmit }) =>\n//             <div>\n//               <Form className = \"formikProfile\">\n//                 <p>Mật khẩu mới:</p>\n//                 <MyInput id=\"password\" type = \"text\" name= \"password\" variant=\"outlined\"/>\n//                 <p>Xác nhận mật khẩu:</p>\n//                 <MyInput id=\"password2\" type = \"text\" name= \"password2\" variant=\"outlined\"/>\n//                 <ButtonToggle id=\"accept\" color=\"primary\" onClick={handelSubmit}>Xác nhận</ButtonToggle>\n//               </Form>\n//             </div>\n//           }\n//         </Formik>\n//       ]\n//     }\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/nguyentrankhanhnguyen/Desktop/web/WebCodeC/src/components/Profile.js"],"names":["React","Component","Menu","AppHeader","MyInput","firebaseApp","ButtonToggle","Formik","Form","Swal","yup","Profile","props","handleClick","e","console","log","validationSchema","object","fullName","string","required","matches","max","min","birthday","email","studentID","phoneNumber","validationPassword","password","password2","oneOf","ref","width"],"mappings":"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CA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"../css/Profile.css\";\nimport { Menu } from \"antd\";\nimport AppHeader from \"./AppHeader\";\nimport { MyInput } from \"./MyInput\";\nimport { firebaseApp } from \"../components/Firebase\";\nimport { ButtonToggle } from \"reactstrap\";\nimport { Formik, Form } from \"formik\";\nimport Swal from \"sweetalert2\";\nimport * as yup from \"yup\";\n\nconst Profile = props => {\n  const handleClick = e => {\n    console.log('click ', e);\n  };\n\n  const validationSchema = yup.object({\n    fullName:yup.string()\n    .required(\"Vui lòng nhập đầy đủ họ tên\")\n    .matches(/^([^0-9]*)$/,\"Tên chỉ bao gồm ký tự từ a-z\")\n    .max(30,\"Tên quá dài\")\n    .min(5,\"Tên quá ngắn\"),\n\n    birthday:yup.string()\n    .required(\"Vui lòng nhập ngày sinh\"),\n\n    email:yup.string()\n    .email('Email không hợp lệ')\n    .required(\"Vui lòng nhập email\"),\n\n    studentID:yup.string()\n    .required('Vui lòng nhập mã số sinh viên')\n    .matches(/^([^a-z]*)$/,\"Mã số sinh viên chỉ gồm 7 số từ 0-9\")\n    .max(7,\"Mã số sinh viên bao gồm 7 số\")\n    .min(7,\"Mã số sinh viên bao gồm 7 số\"),\n\n    phoneNumber:yup.string()\n    .required('Vui lòng nhập mã số điện thoại')\n    .matches(/^([^a-z]*)$/,\"Số điện thoại chỉ gồm 10 số từ 0-9\")\n    .max(10,\"Số điện thoại bao gồm 10 số\")\n    .min(10,\"Số điện thoại bao gồm 10 số\")\n  })\n\n  const validationPassword = yup.object({\n    password:yup.string()\n    .min(6,\"Mật khẩu quá ngắn\")\n    .required('Vui lòng nhập mật khẩu'),\n\n    password2:yup.string()\n    .oneOf([yup.ref('password')], 'Mật khẩu không giống mật khẩu đã nhập')\n    .required('Vui lòng nhập lại mật khẩu'),\n  })\n\n  return (\n    <div>\n      <div>\n        <AppHeader />\n      </div>\n      <div className=\"mainProfile\">\n        <div id=\"leftProfile\">\n          <Menu\n            onClick={handleClick}\n            style={{ width: 256 }}\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n          >\n            <Menu.Item key=\"1\">Thông tin cơ bản</Menu.Item>\n            <Menu.Item key=\"2\">Đổi mật khẩu</Menu.Item>\n          </Menu>\n        </div>\n        <div id=\"rightProfile\">\n            \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile\n\n  // handleClick = e => {\n  //   console.log('click ', e);\n  //   if (e.key === '1') {\n  //     this.setState ({\n  //       userShow: true,\n  //       changePassword: false\n  //     })\n  //   }\n  //   else if (e.key === '2') {\n  //     this.setState ({\n  //       userShow: false,\n  //       changePassword: true\n  //     })\n  //   }\n  // };\n\n  // validationSchema = yup.object({\n  //   fullName:yup.string()\n  //   .required(\"Vui lòng nhập đầy đủ họ tên\")\n  //   .matches(/^([^0-9]*)$/,\"Tên chỉ bao gồm ký tự từ a-z\")\n  //   .max(30,\"Tên quá dài\")\n  //   .min(5,\"Tên quá ngắn\"),\n\n  //   birthday:yup.string()\n  //   .required(\"Vui lòng nhập ngày sinh\"),\n\n  //   email:yup.string()\n  //   .email('Email không hợp lệ')\n  //   .required(\"Vui lòng nhập email\"),\n\n  //   studentID:yup.string()\n  //   .required('Vui lòng nhập mã số sinh viên')\n  //   .matches(/^([^a-z]*)$/,\"Mã số sinh viên chỉ gồm 7 số từ 0-9\")\n  //   .max(7,\"Mã số sinh viên bao gồm 7 số\")\n  //   .min(7,\"Mã số sinh viên bao gồm 7 số\"),\n\n  //   phoneNumber:yup.string()\n  //   .required('Vui lòng nhập mã số điện thoại')\n  //   .matches(/^([^a-z]*)$/,\"Số điện thoại chỉ gồm 10 số từ 0-9\")\n  //   .max(10,\"Số điện thoại bao gồm 10 số\")\n  //   .min(10,\"Số điện thoại bao gồm 10 số\")\n  // })\n\n  // validationPassword = yup.object({\n  //   password:yup.string()\n  //   .min(6,\"Mật khẩu quá ngắn\")\n  //   .required('Vui lòng nhập mật khẩu'),\n\n  //   password2:yup.string()\n  //   .oneOf([yup.ref('password')], 'Mật khẩu không giống mật khẩu đã nhập')\n  //   .required('Vui lòng nhập lại mật khẩu'),\n  // })\n\n  // enableForm = () => {\n  //   document.getElementById(\"fullName\").disabled = false;\n  //   document.getElementById(\"birthday\").disabled = false;\n  //   document.getElementById(\"studentID\").disabled = false;\n  //   document.getElementById(\"phoneNumber\").disabled = false;\n  //   document.getElementById(\"changeInform\").hidden = true;\n  //   document.getElementById(\"accept\").hidden = false;\n  // }\n\n//   setData = () =>{\n//     firebaseApp.database().ref('userInform/' + localStorage.getItem('login')).child('fullName').on('value', function(snapshot) {\n//     })\n//   }\n\n//   handleSuccess = (values) => {\n//     document.getElementById(\"fullName\").disabled = true;\n//     document.getElementById(\"birthday\").disabled = true;\n//     document.getElementById(\"studentID\").disabled = true;\n//     document.getElementById(\"phoneNumber\").disabled = true;\n//     document.getElementById(\"changeInform\").hidden = false;\n//     document.getElementById(\"accept\").hidden = true;\n\n//     console.log(localStorage.getItem('login'))\n\n//     firebaseApp.database().ref('userInform/' + localStorage.getItem('login')).set ({\n//       fullName : values.fullName,\n//       birthday: values.birthday,\n//       email: values.email,\n//       studentID: values.studentID,\n//       phoneNumber: values.phoneNumber,\n//       password : this.state.password\n//     })\n//   }\n\n//   handelChangePassword = (values) => {\n//     var user = firebaseApp.auth().currentUser;\n//     user.updatePassword(values.password).then(function() {\n//       Swal.fire(\n//         'Chúc mừng!',\n//         'Bạn đã thay đổi mật khẩu thành công!',\n//         'success'\n//       )\n//     }).catch(function(error) {\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Thất bại',\n//         text: 'Không thay đổi được mật khẩu!',\n//     })\n//     });\n//   }\n\n//   componentDidMount () {\n//     this.setData();\n//   }\n\n//   render() {\n//     let rightProfile;\n//     if (this.state.userShow) {\n//         rightProfile = [\n//           <Formik\n//             const initialValues = {\n//                 {\n//                     fullName: this.state.fullName,\n//                     birthday: this.state.birthday,\n//                     email: this.state.email,\n//                     studentID: this.state.studentID,\n//                     phoneNumber: this.state.phoneNumber,\n//                 }\n//             }\n//             validationSchema = { this.validationSchema }\n//             onSubmit = {values => this.handleSuccess(values)}>\n//             {({ handelSubmit }) =>\n//               <div>\n//                 <Form className = \"formikProfile\">\n//                   <p>Họ và Tên:</p>\n//                   <MyInput id=\"fullName\" type = \"text\" name= \"fullName\" variant=\"outlined\" disabled/>\n//                   <p>Ngày sinh:</p>\n//                   <MyInput id=\"birthday\" type = \"date\" name= \"birthday\" variant=\"outlined\" disabled/>\n//                   <p>Email:(Không thể thay đổi)</p>\n//                   <MyInput id=\"email\" type = \"email\" name= \"email\" variant=\"outlined\" />\n//                   <p>Mã số sinh viên:</p>\n//                   <MyInput id=\"studentID\" type = \"text\" name= \"studentID\" variant=\"outlined\" disabled/>\n//                   <p>Số điện thoại:</p>\n//                   <MyInput id=\"phoneNumber\" type = \"text\" name= \"phoneNumber\" variant=\"outlined\" disabled/>\n//                   <ButtonToggle id=\"accept\" color=\"primary\" onClick={handelSubmit} hidden>Xác nhận</ButtonToggle>\n//                   <ButtonToggle id=\"changeInform\" color=\"primary\" onClick={this.enableForm} >Thay đổi thông tin</ButtonToggle>\n//                 </Form>\n//               </div>\n//             }\n//           </Formik>\n//         ]\n//     }\n//     else if (this.state.changePassword) {\n//       rightProfile = [\n//         <Formik\n//           const newPassword = {\n//               {\n//                   password: '',\n//                   password2: '',\n//               }\n//           }\n//           validationSchema = { this.validationPassword }\n//           onSubmit = {values => this.handelChangePassword(values)}>\n//           {({ handelSubmit }) =>\n//             <div>\n//               <Form className = \"formikProfile\">\n//                 <p>Mật khẩu mới:</p>\n//                 <MyInput id=\"password\" type = \"text\" name= \"password\" variant=\"outlined\"/>\n//                 <p>Xác nhận mật khẩu:</p>\n//                 <MyInput id=\"password2\" type = \"text\" name= \"password2\" variant=\"outlined\"/>\n//                 <ButtonToggle id=\"accept\" color=\"primary\" onClick={handelSubmit}>Xác nhận</ButtonToggle>\n//               </Form>\n//             </div>\n//           }\n//         </Formik>\n//       ]\n//     }\n\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}