{"ast":null,"code":"import { firebaseApp } from '../../components/Firebase';\nimport Swal from 'sweetalert2';\nimport { CHANGEINFORM } from '../constants/userConstants';\nexport const changeInform = values => {\n  return dispatch => {\n    var emailID = values.email.slice(0, values.email.indexOf(\".\"));\n    firebaseApp.database().ref('userInform/' + emailID).set({\n      fullName: values.fullName,\n      birthday: values.birthday,\n      email: values.email,\n      studentID: values.studentID,\n      phoneNumber: values.phoneNumber,\n      password: values.password\n    });\n    dispatch(changeInformUser(values)); // localStorage.setItem('user', JSON.stringify(values))\n\n    Swal.fire('Chúc mừng ', 'Bạn đã thay đổi thông tin thành công!', 'success');\n  };\n};\nexport const changePassword = values => {\n  return dispatch => {\n    var user = firebaseApp.auth().currentUser;\n    var emailID = values.email.slice(0, values.email.indexOf(\".\"));\n    user.updatePassword(values.password2).then(function () {\n      Swal.fire('Chúc mừng ', 'Bạn đã thay đổi mật khẩu thành công!', 'success');\n      firebaseApp.database().ref('userInform/' + emailID).set({\n        fullName: values.fullName,\n        birthday: values.birthday,\n        email: values.email,\n        studentID: values.studentID,\n        phoneNumber: values.phoneNumber,\n        password: values.password2\n      });\n      firebaseApp.database().ref('userInform/' + emailID).on('value', function (snapshot) {\n        localStorage.setItem('user', JSON.stringify(snapshot.val()));\n        dispatch(changeInformUser(snapshot.val()));\n      });\n    }).catch(function (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Thất bại',\n        text: 'Không thay đổi được mật khẩu!'\n      });\n    });\n  };\n};\nexport const changeInformUser = data => {\n  return {\n    type: CHANGEINFORM,\n    data: data\n  };\n};","map":{"version":3,"sources":["/Users/nguyentrankhanhnguyen/Desktop/web/WebCodeC/src/redux/action/changeInformUser.js"],"names":["firebaseApp","Swal","CHANGEINFORM","changeInform","values","dispatch","emailID","email","slice","indexOf","database","ref","set","fullName","birthday","studentID","phoneNumber","password","changeInformUser","fire","changePassword","user","auth","currentUser","updatePassword","password2","then","on","snapshot","localStorage","setItem","JSON","stringify","val","catch","error","icon","title","text","data","type"],"mappings":"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","sourcesContent":["import {firebaseApp} from '../../components/Firebase'\nimport Swal from 'sweetalert2'\nimport { CHANGEINFORM } from '../constants/userConstants'\n\nexport const changeInform = (values) => {\n    return dispatch => {\n        var emailID = values.email.slice(0, values.email.indexOf(\".\"))\n        firebaseApp.database().ref('userInform/' + emailID).set ({\n            fullName : values.fullName,\n            birthday: values.birthday, \n            email: values.email, \n            studentID: values.studentID,         \n            phoneNumber: values.phoneNumber, \n            password: values.password\n        })\n        dispatch(changeInformUser(values))\n        // localStorage.setItem('user', JSON.stringify(values))\n        Swal.fire(\n            'Chúc mừng ',\n            'Bạn đã thay đổi thông tin thành công!',\n            'success'\n        )\n    }  \n}\n\nexport const changePassword = (values) => {\n    return dispatch => {\n        var user = firebaseApp.auth().currentUser;\n        var emailID = values.email.slice(0, values.email.indexOf(\".\"))\n\n        user.updatePassword(values.password2).then(function() {\n            Swal.fire(\n                'Chúc mừng ',\n                'Bạn đã thay đổi mật khẩu thành công!',\n                'success'\n            )\n            firebaseApp.database().ref('userInform/' + emailID).set ({\n                fullName : values.fullName,\n                birthday: values.birthday, \n                email: values.email, \n                studentID: values.studentID,         \n                phoneNumber: values.phoneNumber, \n                password: values.password2\n            })\n            firebaseApp.database().ref('userInform/' + emailID).on('value', function(snapshot) {\n                localStorage.setItem('user', JSON.stringify(snapshot.val()))\n                dispatch(changeInformUser(snapshot.val()))\n            })\n        }).catch(function(error) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Thất bại',\n                text: 'Không thay đổi được mật khẩu!',\n            })\n        });\n    }\n}\n\nexport const changeInformUser = (data) => {\n    return {\n        type: CHANGEINFORM,\n        data: data\n    }\n}"]},"metadata":{},"sourceType":"module"}