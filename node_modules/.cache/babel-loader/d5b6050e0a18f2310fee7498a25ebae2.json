{"ast":null,"code":"import { firebaseApp } from '../../components/Firebase';\nimport Swal from 'sweetalert2';\nimport { LOGIN } from '../constants/userConstants';\nexport const signUp = values => {\n  return dispatch => {\n    firebaseApp.auth().createUserWithEmailAndPassword(values.email, values.password).then(() => {\n      Swal.fire('Chúc mừng!', 'Bạn đã đăng ký thành công!', 'success');\n      var emailID = values.email.slice(0, values.email.indexOf(\".\"));\n      firebaseApp.database().ref('userInform/' + emailID).set({\n        fullName: values.fullName,\n        birthday: values.birthday,\n        email: values.email,\n        studentID: values.studentID,\n        phoneNumber: values.phoneNumber,\n        password: values.password\n      });\n    });\n  };\n};\nexport const signIn = (values, handleSuccess) => {\n  return dispatch => {\n    firebaseApp.auth().signInWithEmailAndPassword(values.email, values.password).then(() => {\n      var emailID = values.email.slice(0, values.email.indexOf(\".\"));\n      firebaseApp.database().ref('userInform/' + emailID).on('value', function (snapshot) {\n        Swal.fire('Chào mừng \\n' + snapshot.val().fullName, 'Đã đăng nhập thành công!', 'success');\n        console.log(snapshot.val());\n        handleSuccess();\n        localStorage.setItem('user', snapshot.val());\n        dispatch(signInAction(snapshot.val()));\n      });\n    }).catch(function (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Thất bại',\n        text: 'Tài khoản hoặc mật khẩu không đúng!'\n      });\n    });\n  };\n};\nexport const signInAction = data => {\n  return {\n    type: LOGIN,\n    data: data\n  };\n};","map":{"version":3,"sources":["/Users/nguyentrankhanhnguyen/Desktop/web/WebCodeC/src/redux/action/userAction.js"],"names":["firebaseApp","Swal","LOGIN","signUp","values","dispatch","auth","createUserWithEmailAndPassword","email","password","then","fire","emailID","slice","indexOf","database","ref","set","fullName","birthday","studentID","phoneNumber","signIn","handleSuccess","signInWithEmailAndPassword","on","snapshot","val","console","log","localStorage","setItem","signInAction","catch","error","icon","title","text","data","type"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAOC,QAAQ,IAAI;AACfL,IAAAA,WAAW,CAACM,IAAZ,GAAmBC,8BAAnB,CAAkDH,MAAM,CAACI,KAAzD,EAAgEJ,MAAM,CAACK,QAAvE,EACCC,IADD,CACM,MAAK;AACPT,MAAAA,IAAI,CAACU,IAAL,CACI,YADJ,EAEI,4BAFJ,EAGI,SAHJ;AAKA,UAAIC,OAAO,GAAGR,MAAM,CAACI,KAAP,CAAaK,KAAb,CAAmB,CAAnB,EAAsBT,MAAM,CAACI,KAAP,CAAaM,OAAb,CAAqB,GAArB,CAAtB,CAAd;AACAd,MAAAA,WAAW,CAACe,QAAZ,GAAuBC,GAAvB,CAA2B,gBAAgBJ,OAA3C,EAAoDK,GAApD,CAAyD;AACrDC,QAAAA,QAAQ,EAAGd,MAAM,CAACc,QADmC;AAErDC,QAAAA,QAAQ,EAAEf,MAAM,CAACe,QAFoC;AAGrDX,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAHuC;AAIrDY,QAAAA,SAAS,EAAEhB,MAAM,CAACgB,SAJmC;AAKrDC,QAAAA,WAAW,EAAEjB,MAAM,CAACiB,WALiC;AAMrDZ,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AANoC,OAAzD;AAQH,KAhBD;AAiBH,GAlBD;AAmBH,CApBM;AAsBP,OAAO,MAAMa,MAAM,GAAG,CAAClB,MAAD,EAASmB,aAAT,KAA2B;AAC7C,SAAOlB,QAAQ,IAAI;AACfL,IAAAA,WAAW,CAACM,IAAZ,GAAmBkB,0BAAnB,CAA8CpB,MAAM,CAACI,KAArD,EAA4DJ,MAAM,CAACK,QAAnE,EACKC,IADL,CACU,MAAM;AACR,UAAIE,OAAO,GAAGR,MAAM,CAACI,KAAP,CAAaK,KAAb,CAAmB,CAAnB,EAAsBT,MAAM,CAACI,KAAP,CAAaM,OAAb,CAAqB,GAArB,CAAtB,CAAd;AACAd,MAAAA,WAAW,CAACe,QAAZ,GAAuBC,GAAvB,CAA2B,gBAAgBJ,OAA3C,EAAoDa,EAApD,CAAuD,OAAvD,EAAgE,UAASC,QAAT,EAAmB;AAC/EzB,QAAAA,IAAI,CAACU,IAAL,CACI,iBAAiBe,QAAQ,CAACC,GAAT,GAAeT,QADpC,EAEI,0BAFJ,EAGI,SAHJ;AAKAU,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,GAAT,EAAZ;AACAJ,QAAAA,aAAa;AACbO,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,QAAQ,CAACC,GAAT,EAA7B;AACAtB,QAAAA,QAAQ,CAAC2B,YAAY,CAACN,QAAQ,CAACC,GAAT,EAAD,CAAb,CAAR;AACH,OAVD;AAWH,KAdL,EAeKM,KAfL,CAeW,UAASC,KAAT,EAAgB;AACnBjC,MAAAA,IAAI,CAACU,IAAL,CAAU;AACNwB,QAAAA,IAAI,EAAE,OADA;AAENC,QAAAA,KAAK,EAAE,UAFD;AAGNC,QAAAA,IAAI,EAAE;AAHA,OAAV;AAKH,KArBL;AAsBH,GAvBD;AAwBH,CAzBM;AA2BP,OAAO,MAAML,YAAY,GAAIM,IAAD,IAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAErC,KADH;AAEHoC,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM","sourcesContent":["import {firebaseApp} from '../../components/Firebase'\nimport Swal from 'sweetalert2'\nimport { LOGIN } from '../constants/userConstants'\n\nexport const signUp = (values) => {\n    return dispatch => {\n        firebaseApp.auth().createUserWithEmailAndPassword(values.email, values.password)\n        .then(()=> {\n            Swal.fire(\n                'Chúc mừng!',\n                'Bạn đã đăng ký thành công!',\n                'success'\n            )\n            var emailID = values.email.slice(0, values.email.indexOf(\".\"))\n            firebaseApp.database().ref('userInform/' + emailID).set ({\n                fullName : values.fullName,\n                birthday: values.birthday, \n                email: values.email, \n                studentID: values.studentID,         \n                phoneNumber: values.phoneNumber, \n                password: values.password\n             })\n        })\n    }  \n}\n\nexport const signIn = (values, handleSuccess) => {\n    return dispatch => {\n        firebaseApp.auth().signInWithEmailAndPassword(values.email, values.password)\n            .then(() => {\n                var emailID = values.email.slice(0, values.email.indexOf(\".\"))\n                firebaseApp.database().ref('userInform/' + emailID).on('value', function(snapshot) {\n                    Swal.fire(\n                        'Chào mừng \\n' + snapshot.val().fullName,\n                        'Đã đăng nhập thành công!',\n                        'success'\n                    )\n                    console.log(snapshot.val())\n                    handleSuccess()\n                    localStorage.setItem('user', snapshot.val())\n                    dispatch(signInAction(snapshot.val()))\n                })\n            })\n            .catch(function(error) {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Thất bại',\n                    text: 'Tài khoản hoặc mật khẩu không đúng!',\n                })\n            })\n    }\n}\n\nexport const signInAction = (data) => {\n    return {\n        type: LOGIN,\n        data: data\n    }\n}"]},"metadata":{},"sourceType":"module"}